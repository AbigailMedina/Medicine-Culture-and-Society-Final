{"version":3,"sources":["components/SlideShowClickableOptions.jsx","components/AIHistoryTimeline.jsx","components/Circle.jsx","components/ClickableOptions.jsx","components/AIToolkit.jsx","components/AIToolkit2.jsx","components/AIApplicationsSlideShow.jsx","components/Drawbacks.jsx","components/Base.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SlideShowClickableOptions","props","options","state","current","disableLeft","disableRight","length","e","console","log","this","curr","setState","subHeader","className","icon","onClick","goLeft","goRight","content","header","Component","AIHistoryTimeline","aiHistory","Circle","index","startIndex","clicked","bind","circleClicked","ClickableOptions","showOne","showIndex","item","map","key","headerClicked","AIToolkit","aiToolkit","AIToolkit2","aiToolkit2","AIApplicationsSlideshow","aiApplications","Drawbacks","drawbacks","Base","color","onMouseEnter","AIApplicationsSlideShow","library","add","faArrowRight","faArrowLeft","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.ef697d9c.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nclass SlideShowClickableOptions extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.options = this.props.options\n\t\tthis.state = {\n\t\t\tcurrent:0,\n\t\t\tdisableLeft:true,\n\t\t\tdisableRight:this.props.options.length===1\n\t\t}\n\t}\n\tgoLeft(e){\n\t\tconsole.log(\"before\",this.state.current)\n\t\tconst curr = this.state.current\n\t\tif (curr <= 1){\n\t\t\tthis.setState({disableLeft:true})\n\t\t}else{\n\t\t\tthis.setState({\n\t\t\t\tdisableLeft:false,\n\t\t\t\tdisableRight:false,\n\t\t\t\tcurrent:curr-1})\n\t\t}\n\t}\n\tgoRight(e){\n\t\tconsole.log(\"before\",this.state.current)\n\t\tconst curr = this.state.current\n\t\tif (curr >= this.options.length-1){\n\t\t\tthis.setState({disableRight:true})\n\t\t}else{\n\t\t\tthis.setState({\n\t\t\t\tdisableRight:false,\n\t\t\t\tdisableLeft:false,\n\t\t\t\tcurrent:curr+1})\n\t\t}\n\t}\n\tcontent(props){\n\t\t const subHeader = this.props.subHeader;\n\n\t\treturn (\n\n\t\t    <div className=\"columns level is-mobile  \">\n\t\t\t    <div className=\"column level-left level-item\">\n\t\t\t\t\t<FontAwesomeIcon \n\t\t\t\t\t\ticon=\"arrow-left\"\n\t\t\t    \t\tclassName={\"icon-4x my-icon \" + (this.state.disableLeft?\"fa-disabled\":\"\")}\n\t\t\t    \t\tonClick={(e)=>{this.goLeft(e)}}\n\t\t\t    \t\t/>\n\t    \t\t</div>\n\t\t\t    <div className=\"column is-three-quarters level-item \">\n\t\t\t    \t{(this.props.subHeader ? \n\t\t\t    \t\t<span>\n\t\t\t    \t\t\t<header className=\"\">{subHeader[this.state.current]}</header>\n\t\t\t    \t\t</span>:\n\t\t\t    \t\t<span></span>)}\n\n\t\t\t    \t{this.props.options[this.state.current]}\n\t\t\t    </div>\n\t\t\t    <div className=\"column level-item level-right \">\n\t\t\t    \t<FontAwesomeIcon \n\t\t\t    \t\ticon=\"arrow-right\"\n\t\t\t    \t\tclassName={\"icon-4x my-icon \" + (this.state.disableRight? \"fa-disabled\":\"\")}\n\t\t\t    \t\tonClick={(e)=>{this.goRight(e)}}\n\t\t\t    \t\t/>\n\t    \t\t</div>\n\t\t     \n\t\t    </div>\n\t\t  ); \n\t}  \t\t\n\n  \trender() {\n  \t\tconst content = this.content();\n  \t\tconst header = this.props.header;\n\t    return (\n\t    \t<section className=\"section fullScreen \" >\n\t\t    \t<div className=\"container non-circle-text\">\n\t\t    \t\t<header \n\t\t    \t\t\tonClick={()=>this.setState({current:0})}>{header}\n\t\t    \t\t</header>\n\t\t\t    \t{content}\n\t\t\t    </div>\n\t    \t</section>\n\t    )\n\t}\n}\n\nexport default SlideShowClickableOptions;\n","import React, { Component } from 'react'\nimport SlideShowClickableOptions from './SlideShowClickableOptions.jsx'\n\nclass AIHistoryTimeline extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.aiHistory = [\n\t\t'In 1956, John McCarthy and Marvin Minsky hosted the Dartmouth Summer Research Project on Artificial Intelligence—where the term AI was coined. ',\n\t\t'41 years later, IBM’s chess AI beat a chess grandmaster, officially the first time machine was proven to think more intelligently than the best human chess player in the world. ',\n\t\t'So what is AI? Simply put, artificial intelligence is machines having enough intelligence to perform tasks comparable to tasks thought that only humans could accomplish– even tasks considered hard for the average human.'\n\t\t]\n\t\tthis.header = \"What is Artificial Intelligence?\"\n\n\t}\n\n  \trender() {\n\n\t    return (\n\t    \t<div >\n\t    \t\t<SlideShowClickableOptions options={this.aiHistory} header={this.header}/>\n\t    \t</div>\n\t    )\n\t}\n}\n\nexport default AIHistoryTimeline;\n","import React, { Component } from 'react'\n\nclass Circle extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\toptions:this.props.options,\n\t\t\tindex:this.props.startIndex? 1:0,\n\t\t\t//represents the index of info for this circle from options to display\n\t\t}\n\t\tthis.clicked = this.clicked.bind(this);\n\t}\n\t\n\tclicked(){\n\t\tconst index = this.state.index\n\t\tconst options = this.state.options\n\n\t\tif(index < options.length-1){\n\t\t\tthis.setState({index:index+1})\t\n\t\t}\n\t\telse{\n\t\t\tthis.setState({index:0})\n\t\t}\n\t\tthis.props.circleClicked()//to display only this circle\n\t}\n\n  \trender() {\n  \t\tconst index = this.state.index;\n  \t\tconst options = this.state.options;\n\t    return (\n\t\t\t<div className={ index===0 ? \"circle-container\":\"\"}>\n    \t\t\t<div \n\t\t    \t\tclassName={ index===0 ? \"circle\" : \"non-circle-text\"}\n\t\t    \t\tonClick={()=>{this.clicked()}}>\n\t\t    \t\t\t{options[index]}\n\t\t    \t</div>\n    \t\t</div>\t\t\t\t\n\n\t    )\n\t}\n}\n\nexport default Circle;\n","import React, { Component } from 'react'\nimport Circle from './Circle.jsx'\nclass ClickableOptions extends Component {\n\t\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.state = {\n\t\t\toptions:this.props.options,\n\t\t\tshowOne:false,\n\t\t\tshowIndex:0\n\t\t}\n\t\tthis.circleClicked.bind(this)\n\t}\n\t\n\n\theaderClicked(){\n\t\tthis.setState({options:this.props.options, showOne:false})\n\t}\n\tcircleClicked(item,index){\n\t\tif(this.state.showOne===false){//currently showing all options\n\t\t\tthis.setState({showIndex:index,showOne:true})\n\t\t}\n\t}\n\n\tcontent(props){\n\t\tconst showIndex = this.state.showIndex;\n\t\treturn (\n\t\t\t<section className=\"section \">\n\t\t\t\t<div className=\"container  has-text-centered\">\n\t\t\t\t\t{(this.state.showOne === true?\n\t\t\t\t\t\t<Circle \n\t\t\t\t    \t\toptions = {this.state.options[showIndex]}\n\t\t\t\t    \t\tcircleClicked = {()=>{this.circleClicked()}}\n\t\t\t\t    \t\tstartIndex = {this.state.showOne}\n\t\t\t\t    \t/>:\n\t\t\t\t    \t\t(this.state.options.map((item, index) => (\n\t\t\t\t    \t\t\t<Circle \n\t\t\t\t\t\t    \t\tkey={index}\n\t\t\t\t\t\t    \t\toptions = {item}\n\t\t\t\t\t\t    \t\tcircleClicked = {()=>{this.circleClicked(item,index)}}\n\t\t\t\t\t\t    \t\t\n\t\t\t\t\t\t    \t/>))\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)}\n\t\t\t\t\t\n\t\t\t\t</div>\n\t\t\t</section>\n\t\t    \n\t\t); \n\t}  \t\t\n\t\n\n  \trender() {\n  \t\tconst content = this.content();\n  \t\tconst header = this.props.header;\n\t    return (\n\t    \t<section className=\"section fullScreen non-circle-text\">\n\t    \t<div className=\"container\">\n\n\t    \t\t<header \n\t\t    \t\tclassName=\"has-text-centered \" \n\t\t    \t\tonClick={this.headerClicked.bind(this)}>{header}\n\t\t    \t</header>\n\t\t    \t\n\t\t    \t{content}\n\t\t    </div>\n\t    \t</section>\n\t    )\n\t}\n}\n\nexport default ClickableOptions;\n","import React, { Component } from 'react'\nimport ClickableOptions from './ClickableOptions.jsx'\n\nclass AIToolkit extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.aiToolkit = [\n\t\t['Tactile',\"A program can take in tactile input to learn its way through a maze with no vision or learn to walk based off a goal of minimize falling\"],\n\t\t['Visual',\"A program can take in visual input to differentiate items such as faces, used in facial recognition or recognize lane boundries for self-driving cars\"],\n\t\t['Auditory',\"A program can take in auditory input used to id a voice as an individual it has heard before or simply take commands like Siri or Alexa\"],\n\n\t\t['Structured vs Unstructured Data', \n\t\t\t'Structured data is organized in a way machines can take as input, manipulate and output. One example being data in a csv file from IMDB about movies where movies are related to genres; An AI can analyze patterns in titles and \\'learn\\' to guess what genre a title might belong to.',\n\t\t\t'Unstructured data comes in requiring manipulation to become useful in making decisions on. A letter for example- if you hand an AI a letter and tell it to tell you if the author is mad at you, the AI will have to structure the letter into words with associated connotations in order to make this calculation.'],\n\t\t\n\t\t['Quiz yourself...','Is data understood through Tactile, Visual, or Auditory observations structured or unstructured data?', 'Unstructured']\n\t\t]\n\n\t\tthis.header = \"How is it done? Step one: taking in data\"\n\t\n\t}\n\n  \trender() {\n\n\t    return (\n\t    \t<div>\n\t    \t\t<ClickableOptions options={this.aiToolkit} header={this.header}/>\n\t    \t</div>\n\t    )\n\t}\n}\n\nexport default AIToolkit;\n","import React, { Component } from 'react'\nimport ClickableOptions from './ClickableOptions.jsx'\n\nclass AIToolkit2 extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.aiToolkit2 = [\n\t\t['Natural Language Processing',\"Natural Language processing is the use of unstructured language-based data in the form of text or audio that AI can process into structured data it can use to make decisions.\"],\n\t\t['Machine Learning','Machine Learning (ML) is a technique focused on analyzing structured data such as a csv of data representing relationships between traits'],\n\t\t\n\t\t['Learning Types','Reinforcement learning: the machine learned through trial and error and feedback it gained from those trials.',\n\t\t\t\t\t\t\t'Supervised learning gives the machine labels for known solutions to a problem to guide the machine when it is learning.', \n\t\t\t\t\t\t\t'Unsupervised is the opposite where the robot is given no information to go off of and is expected to form patterns to learn from data it creates on its own.'],\n\t\t['Deep Learning',\"Deep Learning is a tool that AI use to explore complex non-linear patterns in data as opposed to ML that can handle only limited amounts of dimentions (traits) and their relationships.\"]\n\t\t]\n\t\t\n\t\tthis.header = \"How is it done? Step two: understanding data\"\n\t\t\n\t}\n\n  \trender() {\n\n\t    return (\n\t    \t<div>\n\t    \t\t<ClickableOptions options={this.aiToolkit2} header={this.header}/>\n\t    \t</div>\n\t    )\n\t}\n}\n\nexport default AIToolkit2;\n","import React, { Component } from 'react'\nimport SlideShowClickableOptions from './SlideShowClickableOptions.jsx'\n\nclass AIApplicationsSlideshow extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t//todo: find a way to combine the content into one ds with optional subheaders\n\t\tthis.aiApplications = [\n\t\t\t'AI is used in treatments for stroke by analyzing a patients normal movements versus movements right before and during a stroke through the use of wearable technology to alert the patient of a oncoming stroke',\n\t\t\t'CNN has successfully been used in the medical field for disease diagnosis. Congenital cataract disease through learning ocular images. CNN has over 90% accuracy on diagnosis and treatment suggestions. CNN has also identified skin cancer from clinical images and had over 90% accuracy for indicating both malignant and benign lesions.',\n\t\t\t'Intelligent artificial medical assistants assist doctors on the surgery table and have the ability to decrease invasiveness while improving accuracy, leading the patient to faster healing times and lower rates of infection.'\n\t\t]\n\t\tthis.header = \"What Applications are there in healthcare?\"\n\t\t\n\t}\n\t\n  \trender() {\n\n\t    return (\n\t    \t<div >\n\t    \t\t<SlideShowClickableOptions \n\t\t    \t\tsubHeader={['Treatment','Diagnosis','Smart robotic surgery']} \n\t\t    \t\toptions={this.aiApplications} header={this.header}/>\n\t    \t</div>\n\t    )\n\t}\n}\n\nexport default AIApplicationsSlideshow;\n","import React, { Component } from 'react'\nimport SlideShowClickableOptions from './SlideShowClickableOptions.jsx'\n\nclass Drawbacks extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\t\n\t\tthis.drawbacks = [\n\t\t'The first drawback AI in medicine is the constant need for updating software and machine repair and maintenance. This becomes very costly as the computers are very complex. ',\n\t\t'An AI arms race could lead to mass casualties. Another danger with this level of AI could be that a machine is programmed to do something beneficial, but it will do anything possible to achieve its goal. This may mean destruction to solve its task, something bad happens as an unintended side effect',\n\t\t'Any artificially intelligent system had to be created by a human developer. Such developers have biases and it is not uncommon that these biases get programmed into the system. '\n\t\t]\n\t\tthis.header = \"What are the drawbacks of Artificial Intelligence in medicine?\"\n\n\t}\n\n  \trender() {\n\n\t    return (\n\t    \t<div >\n\t    \t\t<SlideShowClickableOptions options={this.drawbacks} header={this.header}/>\n\t    \t</div>\n\t    )\n\t}\n}\n\nexport default Drawbacks;\n","import React, { Component } from 'react'\nimport AIHistoryTimeline from './AIHistoryTimeline.jsx'\nimport AIToolKit from './AIToolkit.jsx'\nimport AIToolKit2 from './AIToolkit2.jsx'\nimport AIApplicationsSlideShow from './AIApplicationsSlideShow.jsx'\nimport Drawbacks from './Drawbacks.jsx'\n\nclass Base extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcolor:\"coral-reef\"\n\t\t}\n\t}\n\t\n\n  \trender() {\n\t    return (\n\t    \t<div className={this.state.color}>\n\t    \t\t<div onMouseEnter={()=>this.setState({color:\"coral-reef\"})}>\n\t\t    \t\t<AIHistoryTimeline/>\n\t\t    \t</div>\n\t\t    \t<div onMouseEnter={()=>this.setState({ color:\"black\"})}>\n\t\t    \t\t<AIToolKit />\n\t\t    \t</div>\n\t\t    \t<div onMouseEnter={()=>this.setState({ color:\"coral-reef\"})}>\n\t\t    \t\t<AIToolKit2 />\n\t\t    \t</div>\n\t\t    \t<div onMouseEnter={()=>this.setState({ color:\"black\"})}>\n\t\t    \t\t<AIApplicationsSlideShow />\n\t\t    \t</div>\n\t\t    \t<div onMouseEnter={()=>this.setState({ color:\"coral-reef\"})}>\n\t\t    \t\t<Drawbacks />\n\t\t    \t</div>\n\t\t    \t\n\t    \t</div>\n\t    )\n\t}\n}\n\nexport default Base;\n","import React from 'react';\nimport './App.scss';\nimport Base from './components/Base.jsx'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faArrowRight, faArrowLeft } from '@fortawesome/free-solid-svg-icons'\n\nimport 'bulma/css/bulma.css'\n \nlibrary.add( faArrowRight, faArrowLeft)\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <Base/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bulma/css/bulma.css'\n\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}